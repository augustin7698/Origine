console.log('Origine is connected'); function app(a, b, c, d, e, f, g, h, i, j) { if (a == 1) { include("https://cdn.jsdelivr.net/gh/christinecha/choreographer-js@01694a9ab50e69f7d459b3ca2d9a5f6e4c56c776/index.js"); } if (b == 1) { include("https://unpkg.com/react-dom@16/umd/react-dom.development.js"); include("https://unpkg.com/react@16/umd/react.development.js"); } if (c == 1) { include("https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"); } if (d == 1) { include("https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"); } if (e == 1) { include("https://d3js.org/d3.v7.min.js"); } if (f == 1) { include("https://ajax.googleapis.com/ajax/libs/dojo/1.14.1/dojo/dojo.js"); } if (g == 1) { include("https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"); } if (h == 1) { include("https://unpkg.com/aos@2.3.1/dist/aos.js"); document.getElementsByTagName('head')[0].innerHTML = document.getElementsByTagName('head')[0].innerHTML + "<link rel='stylesheet' type='text/css' href='https://unpkg.com/aos@2.3.1/dist/aos.css' />"; } if (i == 1) { include("https://cdn.jsdelivr.net/npm/chart.js@3.5.1/dist/chart.min.js"); } if (j == 1) { include("https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"); document.getElementsByTagName('head')[0].innerHTML = document.getElementsByTagName('head')[0].innerHTML + "<link rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' />"; } } async function wait(a, b, c, d, e, f, g, h, i, i, j, k) { await new Promise(resolve => setTimeout(resolve, a)); if (b == "" || b == null || b == undefined) {} else { eval(arguments[1] + '(' + c + ',' + d + ',' + e + ',' + f + ',' + g + ',' + h + ',' + i + ',' + i + ',' + j + ',' + k + ')'); } } function repeat(a, b, c, d, e, f, g, h, i, i, j, k) { for (let i = 0; i < a; i++) {window[b](c, d, e, f, g, h, i, i, j, k); } } function get(a) { fetch(a).then(function(reponse) { if (reponse.ok) { return reponse.json(); }}).then(function(value) { console.log(value); }).catch(function(err) { return "error" }); } function copy(a, b) { navigator.clipboard.writeText(a).then(function() { if (b != undefined) { alert(b); } }, function() {console.log('error'); }); } function select() { return window.getSelection().toString() } function key(event) { if (event == 'info') { return { 8: 'supp(au dessus de entrer)', 9: 'tab', 13: 'entrer', 16: 'maj', 17: 'ctrl', 18: 'alt gr', 19: 'maj automatique', 27: 'echap', 32: 'espace', 33: 'heut de la page', 34: 'bas de la page', 35: 'fin', 36: 'flèche digonal haut/gauche', 37: 'fleche gauche', 38: 'fleche haut', 39: 'fleche droite', 40: 'fleche bas', 45: 'insér.', 46: 'suppr.', 48: '0', 49: '1', 50: '2', 51: '3', 52: '4', 53: '5', 54: '6', 55: '7', 56: '8', 57: '9', 65: 'a', 66: 'b', 67: 'c', 68: 'd', 69: 'e', 70: 'f', 71: 'g', 72: 'h', 73: 'i', 74: 'j', 75: 'k', 76: 'l', 77: 'm', 78: 'n', 79: 'o', 80: 'p', 81: 'q', 82: 'r', 83: 's', 84: 't', 85: 'u', 86: 'v', 87: 'w', 88: 'x', 89: 'y', 90: 'z', 91: 'window', 93: 'menu', 112: 'f1', 113: 'f2', 114: 'f3', 115: 'f4', 116: 'f5', 117: 'f6', 118: 'f7', 119: 'f8', 120: 'f9', 121: 'f10', 122: 'f11', 123: 'f12', 173: 'couper le son', 174: 'son -', 175: 'son +', 179: 'play/pause', 186: '£', 187: '+', 188: '?', 190: '.', 191: '/', 192: '%', 220: 'µ', 221: '¨', 222: '²', 223: '§', 226: '<' } } else { return event.keyCode; } } function date() { var heure = new Date(); return date = { 'year': heure.getFullYear(), 'month': heure.getMonth(), 'day': heure.getDay(), 'hour': heure.getHours(), 'minute': heure.getMinutes(), 'second': heure.getSeconds(), 'GMT': heure.toGMTString() }; } function include(a) { return (a.replace('https://github.com/', 'https://cdn.jsdelivr.net/gh/')).replace('/blob/', '@'); $.getScript(a); } function add(a, b, c) { d = false; if (a.search("#") == 0) { a = a.replace('#', ''); document.getElementById(a).innerHTML = document.getElementById(a).innerHTML + b; d = true; } if (a.search(/[.]/g) == 0 && d == false) { d = true; a = a.replace('.', ''); if (c != undefined) { document.getElementsByClassName(a)[c].innerHTML = document.getElementsByClassName(a)[c].innerHTML + b; } else { c = 0; while (document.getElementsByClassName(a)[c] != undefined) { c = c + 1; } while (c != 0) { c = c - 1; document.getElementsByClassName(a)[c].innerHTML = document.getElementsByClassName(a)[c].innerHTML + b; } } } if (d == false) { if (c != undefined) { document.getElementsByTagName(a)[c].innerHTML = document.getElementsByTagName(a)[c].innerHTML + b; } else { c = 0; while (document.getElementsByTagName(a)[c] != undefined) { c = c + 1; } while (c != 0) { c = c - 1; document.getElementsByTagName(a)[c].innerHTML = document.getElementsByTagName(a)[c].innerHTML + b;} } } } function mod(a, b, c) { d = false; if (a.search("#") == 0) { a = a.replace('#', ''); document.getElementById(a).innerHTML = b; d = true; } if (a.search(/[.]/g) == 0 && d == false) { d = true; a = a.replace('.', ''); if (c != undefined) { document.getElementsByClassName(a)[c].innerHTML = b; } else { c = 0; while (document.getElementsByClassName(a)[c] != undefined) { c = c + 1; } while (c != 0) { c = c - 1; document.getElementsByClassName(a)[c].innerHTML = b; } } } if (d == false) { if (c != undefined) { document.getElementsByTagName(a)[c].innerHTML = b; } else { c = 0; while (document.getElementsByTagName(a)[c] != undefined) { c = c + 1 } while (c != 0) { c = c - 1; document.getElementsByTagName(a)[c].innerHTML = b; } } } } function del(a, c) { b = false; if (a.search("#") == 0) { a = a.replace('#', ''); document.getElementById(a).innerHTML = null; b = true; } if (a.search(/[.]/g) == 0 && b == false) { b = true; a = a.replace('.', ''); if (c != undefined) { document.getElementsByClassName(a)[c].innerHTML = null; } else { c = 0; while (document.getElementsByClassName(a)[c] != undefined) { c = c + 1; } while (c != 0) { c = c - 1; document.getElementsByClassName(a)[c].innerHTML = null; } } } if (b == false) { if (c != undefined) { document.getElementsByTagName(a)[c].innerHTML = null; } else { c = 0; while (document.getElementsByTagName(a)[c] != undefined) { c = c + 1; } while (c != 0) { c = c - 1; document.getElementsByTagName(a)[c].innerHTML = null; } } } } function elementffectif(a) { b = 0; if (a.search(/[.]/g) == 0) { a = a.replace(/[.]/g, ''); while (document.getElementsByClassName(a)[b] != undefined) { b = b + 1; } } else { if (a.search('#') == 0) { a = a.replace('#', ''); if (document.getElementById(a) != undefined) { return 1 } else { return 0 } } else { if (document.getElementsByTagName(a)[b] != undefined) { while (document.getElementsByTagName(a)[b] != undefined) { b = b + 1; } } } } return b; } function style(a) { document.getElementsByTagName('head')[0].innerHTML = document.getElementsByTagName('head')[0].innerHTML + "<style type='text/css'>" + a + "</style>"; } function random(a, b) { return Math.floor(Math.random() * (b - a + 1)); } function round(a) { return Math.floor(a); } function isceric(a) { if(cber.isInteger(Math.floor("'" + a + "'"))) { return true; } else { return false; } } async function autoscroll(a, b) { if (Math.round(arguments[1]) == 0) { arguments[1] = 1; } if (arguments[1] > 100) { arguments[1] = 100; } if (arguments[0] > 100) { arguments[0] = 100; } window.scroll({top: (window.scrollY + Px), behavior: 'smooth'});,if ((window.scrollY + Px) == window.scrollY) { await wait(arguments[0], 'autoscroll', arguments[0], arguments[1]); } } function howscroll() { return {'X': window.scrollX, 'Y': window.scrollY}; } function goto(a) { PerfUrl = document.location.href.split('#'); if (a.includes('#') == true) { redirection(PerfUrl[0] + a); } else { redirection(PerfUrl[0] + '#' + a); } } function gototop() { redirection(window.location.href.split('#')[0] + '#'); } function redirection(a) { window.location.href = a; } function news(a) { window.open().document.open(); window.open().document.write(a); window.open().document.close(); }